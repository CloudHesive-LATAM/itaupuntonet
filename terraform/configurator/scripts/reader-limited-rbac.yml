# REFERENCE: https://learnk8s.io/rbac-kubernetes
# First, define a SA 
# Then, attach it to a K8sRole
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sa-viewer
  namespace: default
---

# Once done, build the RBAC permission on K8s
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-viewer
  namespace: default
rules:          # Authorization rules for this role
  # Configure it in different API GROUPS (as lists)
  # for example, - services, - pods, - crd, etc
  
  - apiGroups:  # 1st API group
      - ''      # An empty string designates the core API group.
    resources:
      - services
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups: # 2nd API group
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-viewer
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-viewer
subjects:
  - kind: ServiceAccount
    name: sa-viewer
    namespace: default